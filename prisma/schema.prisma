// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  email          String?   @unique
  emailVerified  DateTime?
  name           String?
  hashedPassword String?

  updatedAt DateTime  @updatedAt
  products  Product[]
  projects  Project[]
}

model Location {
  id              String  @id @default(uuid())
  locationName    String?
  locationAddress String?
  userId          Int?
}

model Product {
  id                 String  @id @default(uuid())
  userId             String
  productBrand       String?
  productName        String  @unique
  productDescription String
  productPrice       Float   @db.DoublePrecision
  productCategory    String?
  location           String?
  totalQty           Int

  user     User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects ProductsInProject[]
}

//created project model, working on front-end page to create now project
model Project {
  id                 String   @id @default(uuid())
  createdAt          DateTime @default(now())
  userId             String
  projectName        String
  projectDescription String

  user     User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  products ProductsInProject[]
}

//join table to now add many-to-many relationship of projects to products
model ProductsInProject {
  id        String @id @default(uuid())
  projectId String
  productId String
  quantity  Int

  project Project @relation(fields: [projectId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Vendor {
  id            String  @id @default(uuid())
  vendorName    String
  vendorAddress String?
}
